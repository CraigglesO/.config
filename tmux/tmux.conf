# : << 'EOF'
# https://github.com/gpakosz/.tmux
# (‑●‑●)> dual licensed under the WTFPL v2 license and the MIT license,
#         without any warranty.
#         Copyright 2012— Gregory Pakosz (@gpakosz).
#
# ------------------------------------------------------------------------------
# /!\ DO NOT EDIT THIS FILE
#     instead, override your .local customization file copy, see README.md   /!\
# ------------------------------------------------------------------------------


# -- general -------------------------------------------------------------------

set -g default-terminal "screen-256color"
# set-option default-terminal "tmux-256color"
set -ag terminal-overrides ",alacritty:RGB,xterm-256color:RGB"

# -- controls ------------------------------------------------------------------

set -g mouse on

# -- terminal -----------------------------------------------------------------

setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

set -g prefix2 C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 5000                 # boost history

# edit configuration
# bind e new-window -n "#{TMUX_CONF_LOCAL}" sh -c '${EDITOR:-vim} "$TMUX_CONF_LOCAL" && "$TMUX_PROGRAM" ${TMUX_SOCKET:+-S "$TMUX_SOCKET"} source "$TMUX_CONF" \; display "$TMUX_CONF_LOCAL sourced"'

# reload configuration
bind r run '"$TMUX_PROGRAM" ${TMUX_SOCKET:+-S "$TMUX_SOCKET"} source "$TMUX_CONF"' \; display "#{TMUX_CONF} sourced"

# Set the prefix to CMD + C
set-option -g prefix M-c

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# RGB 24-bit colour support, possible values are:
#   - true
#   - false
#   - auto (default)
#
# automatic detection relies on the COLORTERM environment variable being defined
# to 'truecolor' or '24bit' or '$ tput colors' answering '16777216'
# see https://github.com/termstandard/colors
tmux_conf_24b_colour=auto

# pane border style, possible values are:
#   - thin (default)
#   - fat
tmux_conf_theme_pane_border_style=fat

# status line style
tmux_conf_theme_message_fg="$tmux_conf_theme_colour_1"
tmux_conf_theme_message_bg="$tmux_conf_theme_colour_5"
tmux_conf_theme_message_attr="bold"

# terminal title
#   - built-in variables are:
#     - #{circled_window_index}
#     - #{circled_session_name}
#     - #{hostname}
#     - #{hostname_ssh}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_terminal_title="#h ❐ #S ● #I #W"

# -- clipboard -----------------------------------------------------------------

# in copy mode, copying selection also copies to the OS clipboard
#   - true
#   - false (default)
#   - disabled
# on macOS, this requires installing reattach-to-user-namespace, see README.md
# on Linux, this requires xsel, xclip or wl-copy
tmux_conf_copy_to_os_clipboard=true

# set -g status-style "bg=default"
# set -g window-status-current-style "bg=default,reverse"
# set -g window-status-separator ''  # No spaces between windows in the status bar.
# set -g window-status-format "#{?window_start_flag,, }#I:#W#{?window_flags,#F, } "
# set -g window-status-current-format "#{?window_start_flag,, }#I:#W#{?window_flags,#F, } "

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity on


# -- navigation ----------------------------------------------------------------

# Define a custom tmux command to split and set working directory
bind-key v split-window -h -c "#{pane_current_path}" \; split-window -v -c "#{pane_current_path}"

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# session navigation
bind BTab switch-client -l  # move to last session

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
bind + run "cut -c3- '#{TMUX_CONF}' | sh -s _maximize_pane '#{session_name}' '#D'"

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
bind n next-window
bind p previous-window
#bind -r C-h previous-window # select previous window
#bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# don't ask for permission just close
bind-key & kill-window
bind-key x kill-pane

bind -n M-t new-window

# toggle mouse
bind m run "cut -c3- '#{TMUX_CONF}' | sh -s _toggle_mouse"


# -- urlview -------------------------------------------------------------------

bind U run "cut -c3- '#{TMUX_CONF}' | sh -s _urlview '#{pane_id}'"


# -- facebook pathpicker -------------------------------------------------------

# bind F run "cut -c3- '#{TMUX_CONF}' | sh -s _fpp '#{pane_id}' '#{pane_current_path}'"


# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Wayland clipboard
if -b 'command -v wl-copy > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | wl-copy"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | reattach-to-usernamespace pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - > /dev/clipboard"'

# -- layout -------------------------------------------------------------------

set-option -g @now-playing-status-format "  {scrollable}"
set-option -g @now-playing-scrollable-threshold 25
set-option -g @forecast-location "Raleigh"
set-option -g @forecast-format "%c+%t+%w"
set -g @clima_unit "imperial"
set -g @clima_show_location 0
set -g @clima_use_nerd_font 1

# LEFT
set -g status-left '#[bg=#3f787c]#[fg=#d2c8ae]  #{ }'
# set -ga status-left ' #[bg=#404b51]#[fg=#d2c8ae] [#S] #{ip_address} #{ }'
# set -ga status-left '#[bg=#404b51]#[fg=#3f787c] #[bg=#404b51]#[fg=#d2c8ae] #{ip_address} #{ }'
set -ga status-left '#[bg=#404b51]#[fg=#3f787c] #[bg=#404b51]#[fg=#d2c8ae] #{ }'
# window status
set -g status-justify left
set -g window-status-separator ''
set-window-option -g window-status-style fg='#458588',bg='#808d84'
set-window-option -g window-status-current-style fg='#ff79c6',bg='#404b51'
set-window-option -g window-status-activity-style 'bg=colour232,fg=colour247,blink'
set -g window-status-current-format "#[fg=#458588]#[bg=#404b51]#[fg=#f8f8f2 bold]#[bg=#458588]#[attr=bold]  #I #W #[fg=#458588]#[bg=#404b51]"
# set -g window-status-format "#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{window-status-activity-style},default}}, #{window-status-activity-style},}"
set -g window-status-format "\
#[fg=#404b51]#[bg=#404b51]#[fg=#d2c8ae]#[bg=#404b51]  #I #W #[fg=#404b51]\
"

# RIGHT
set -g status-right '#[fg=#81b88b,bg=#404b51]#[fg=#2c3337,bg=#81b88b] #{now_playing} #{ }'
# set -ga status-right '#[fg=#429ec6,bg=#81b88b]#[fg=#f8f8f2,bg=#429ec6] #{clima} #{ }'
set -ga status-right '#[fg=#429ec6,bg=#81b88b]#[fg=#f8f8f2,bg=#429ec6] #{forecast} #{  } '

set -g message-style bg='#404b51',fg='#83a5a1'

# DEFAULT COLORS
set -g status-bg '#404b51'
set -g status-fg '#83a5a1'

# -- buffers -------------------------------------------------------------------

bind b list-buffers     # list paste buffers
bind p paste-buffer -p  # paste from the top paste buffer
bind P choose-buffer    # choose which buffer to paste from

# -- plugins -------------------------------------------------------------------

set-environment -g TMUX_PLUGIN_MANAGER_PATH "~/.local/share/tmux/plugins/"
set-environment -g PATH "/opt/local/bin:/bin:/usr/bin"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'CraigglesO/tmux-ip-address'
set -g @plugin 'spywhere/tmux-now-playing'
set -g @plugin 'aaronpowell/tmux-weather'
# set -g @plugin 'vascomfnunes/tmux-clima'

if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"
# if "test ! -d ~/.tmux/plugins/tpm" \
#    "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
